package com.revature.entity;
// Generated Nov 7, 2017 9:24:46 PM by Hibernate Tools 5.2.5.Final

import java.sql.Timestamp;
import java.util.HashSet;
import java.util.Set;

import javax.persistence.CascadeType;
import javax.persistence.Column;
import javax.persistence.ElementCollection;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;
import com.revature.entity.TfTech;
/**
 * TfBatch generated by hbm2java
 */
@Entity
@Table(name = "TF_BATCH", schema = "ADMIN")
public class TfBatch implements java.io.Serializable, Comparable<TfBatch> {

	/**
	 *
	 */
	private static final long serialVersionUID = 1893469049852289417L;
	private Integer tfBatchId;
	private TfBatchLocation tfBatchLocation;
	private TfCurriculum tfCurriculum;
	private String tfBatchName;
	private Timestamp tfBatchStartDate;
	private Timestamp tfBatchEndDate;
	private Set<TfAssociate> tfAssociates = new HashSet<TfAssociate>();
	private Set<TfBatchTechJunction> batchTechs = new HashSet<TfBatchTechJunction>();  //Batch owns these Technologies

	public TfBatch() {
	}

	public TfBatch(Integer tfBatchId) {
		this.tfBatchId = tfBatchId;
	}

	public TfBatch(Integer tfBatchId, TfBatchLocation tfBatchLocation, TfCurriculum tfCurriculum, String tfBatchName,
			Timestamp tfBatchStartDate, Timestamp tfBatchEndDate, Set<TfAssociate> tfAssociates, Set<TfBatchTechJunction> batchTechs) {
		this.tfBatchId = tfBatchId;
		this.tfBatchLocation = tfBatchLocation;
		this.tfCurriculum = tfCurriculum;
		this.tfBatchName = tfBatchName;
		this.tfBatchStartDate = tfBatchStartDate;
		this.tfBatchEndDate = tfBatchEndDate;
		this.tfAssociates = tfAssociates;
		this.batchTechs = batchTechs;
	}

	@Id
	@Column(name = "TF_BATCH_ID", unique = true, nullable = false, precision = 22, scale = 0)
	public Integer getTfBatchId() {
		return this.tfBatchId;
	}

	public void setTfBatchId(Integer tfBatchId) {
		this.tfBatchId = tfBatchId;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "TF_BATCH_LOCATION_ID")
	public TfBatchLocation getTfBatchLocation() {
		return this.tfBatchLocation;
	}

	public void setTfBatchLocation(TfBatchLocation tfBatchLocation) {
		this.tfBatchLocation = tfBatchLocation;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "TF_CURRICULUM_ID")
	public TfCurriculum getTfCurriculum() {
		return this.tfCurriculum;
	}

	public void setTfCurriculum(TfCurriculum tfCurriculum) {
		this.tfCurriculum = tfCurriculum;
	}


	@OneToMany(fetch=FetchType.LAZY, mappedBy="pk.batch", cascade=CascadeType.ALL)
	public Set<TfBatchTechJunction> getBatchTechJunctions() {
       return this.batchTechs;
   	}
	
	public void setBatchTechJunctions(Set<TfBatchTechJunction> batchTechs) {
		this.batchTechs = batchTechs;
	}

	@Column(name = "TF_BATCH_NAME", length = 50)
	public String getTfBatchName() {
		return this.tfBatchName;
	}

	public void setTfBatchName(String tfBatchName) {
		this.tfBatchName = tfBatchName;
	}

	@Column(name = "TF_BATCH_START_DATE")
	public Timestamp getTfBatchStartDate() {
		return this.tfBatchStartDate;
	}

	public void setTfBatchStartDate(Timestamp tfBatchStartDate) {
		this.tfBatchStartDate = tfBatchStartDate;
	}

	@Column(name = "TF_BATCH_END_DATE")
	public Timestamp getTfBatchEndDate() {
		return this.tfBatchEndDate;
	}

	public void setTfBatchEndDate(Timestamp tfBatchEndDate) {
		this.tfBatchEndDate = tfBatchEndDate;
	}

	@OneToMany(fetch = FetchType.EAGER, mappedBy = "tfBatch")
	public Set<TfAssociate> getTfAssociates() {
		return this.tfAssociates;
	}
    	public void setTfAssociates(Set<TfAssociate> tfAssociates) {
		this.tfAssociates = tfAssociates;
	}

	@Override
	public String toString() {
		return "TfBatch [tfBatchId=" + tfBatchId + ", tfBatchLocation=" + tfBatchLocation + ", tfCurriculum="
				+ tfCurriculum + ", tfBatchName=" + tfBatchName + ", tfBatchStartDate=" + tfBatchStartDate
				+ ", tfBatchEndDate=" + tfBatchEndDate + ", tfAssociates=" + tfAssociates + "]";
	}

	@Override
	public int compareTo(TfBatch o) {
		return this.tfBatchId-o.getTfBatchId();
	}

	@Override
	public int hashCode() {
		final int prime = 31;
		int result = 1;
		result = prime * result + ((batchTechs == null) ? 0 : batchTechs.hashCode());
		result = prime * result + ((tfAssociates == null) ? 0 : tfAssociates.hashCode());
		result = prime * result + ((tfBatchEndDate == null) ? 0 : tfBatchEndDate.hashCode());
		result = prime * result + ((tfBatchId == null) ? 0 : tfBatchId.hashCode());
		result = prime * result + ((tfBatchLocation == null) ? 0 : tfBatchLocation.hashCode());
		result = prime * result + ((tfBatchName == null) ? 0 : tfBatchName.hashCode());
		result = prime * result + ((tfBatchStartDate == null) ? 0 : tfBatchStartDate.hashCode());
		result = prime * result + ((tfCurriculum == null) ? 0 : tfCurriculum.hashCode());
		return result;
	}

	@Override
	public boolean equals(Object obj) {
		if (this == obj)
			return true;
		if (obj == null)
			return false;
		if (getClass() != obj.getClass())
			return false;
		TfBatch other = (TfBatch) obj;
		if (batchTechs == null) {
			if (other.batchTechs != null)
				return false;
		} else if (!batchTechs.equals(other.batchTechs))
			return false;
		if (tfAssociates == null) {
			if (other.tfAssociates != null)
				return false;
		} else if (!tfAssociates.equals(other.tfAssociates))
			return false;
		if (tfBatchEndDate == null) {
			if (other.tfBatchEndDate != null)
				return false;
		} else if (!tfBatchEndDate.equals(other.tfBatchEndDate))
			return false;
		if (tfBatchId == null) {
			if (other.tfBatchId != null)
				return false;
		} else if (!tfBatchId.equals(other.tfBatchId))
			return false;
		if (tfBatchLocation == null) {
			if (other.tfBatchLocation != null)
				return false;
		} else if (!tfBatchLocation.equals(other.tfBatchLocation))
			return false;
		if (tfBatchName == null) {
			if (other.tfBatchName != null)
				return false;
		} else if (!tfBatchName.equals(other.tfBatchName))
			return false;
		if (tfBatchStartDate == null) {
			if (other.tfBatchStartDate != null)
				return false;
		} else if (!tfBatchStartDate.equals(other.tfBatchStartDate))
			return false;
		if (tfCurriculum == null) {
			if (other.tfCurriculum != null)
				return false;
		} else if (!tfCurriculum.equals(other.tfCurriculum))
			return false;
		return true;
	}

	

}
